/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package n3_livraria2;

import fatec.com.br.persistencia.Banco;
import fatec.com.br.persistencia.ClienteDAO;
import fatec.com.br.persistencia.PedidoDAO;
import fatec.com.br.persistencia.PedidoVO;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David
 */
public class FormHistorico extends javax.swing.JFrame {
    private Main main;
    String usuario;
    private Cliente cli;
    private ClienteDAO cliDAO;
    int cod;
    int codp;
    private ResultSet rs;
    private JTable table1;
     private JTable table2;
    Item item;
    private Banco banco = new Banco("root","","3306", "localhost","livraria");
    /**
     * Creates new form FormHistorico
     */
    public FormHistorico(Main m) {
        main=m;
        initComponents();
        getContentPane().setBackground(Color.getHSBColor(0.650f,0.158f,0.750f));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spResultado = new javax.swing.JScrollPane();
        btPesquisar = new javax.swing.JButton();
        spItens = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        psSenha = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Livraria -Detalhes-");
        setBounds(new java.awt.Rectangle(0, 0, 1000, 600));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btPesquisar.setText("Pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        jLabel1.setText("Itens do Pedido:");

        txtUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUsuarioFocusGained(evt);
            }
        });

        jLabel2.setText("Usu√°rio:");

        jLabel3.setText("Senha:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spItens)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsuario)
                            .addComponent(psSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(btPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btPesquisar)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(psSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spItens, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))
                    .addComponent(spResultado))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_formWindowClosing
    private boolean validarDados(){
        if(txtUsuario.getText().length() ==0 || psSenha.getText().length() ==0){
            return false;
        }
        else
            return true;
    }
    
  
    
    
    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        // TODO add your handling code here:
        if(!validarDados()){
            JOptionPane.showMessageDialog(rootPane, "Favor preencher todos os campos", "Mensagem ao Usuario", JOptionPane.INFORMATION_MESSAGE);
             return;
        }
        try{
            cliDAO = new ClienteDAO(banco);
            
            if(cliDAO.pesquisarNomeSenha(psSenha.getText(),txtUsuario.getText()) == null){
                JOptionPane.showMessageDialog(null,"Verifique usuario e senha e tente novamente!");
            }
            else{
                PedidoDAO pedidoDAO = new PedidoDAO(banco);
                cod = cliDAO.pesquisarCodigo(psSenha.getText(), txtUsuario.getText());
                System.out.println("aqui1");
                banco.abrir();
                rs=pedidoDAO.listarPedido(cod);
                montaTabela1();
                banco.fechar();
            }
        }catch(Exception ee){
           System.out.println(ee);
           JOptionPane.showMessageDialog(null,"Verifique sua senha e tente novamente!");
        }
        
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void txtUsuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsuarioFocusGained
      
    }//GEN-LAST:event_txtUsuarioFocusGained
     private void montaTabela1(){
            try{
                DefaultTableModel tableMode1 = new DefaultTableModel(
                        new String[]{},0){ };
                int qtdColunas = rs.getMetaData().getColumnCount();
                for(int indice=1; indice<=qtdColunas; indice ++)
                    tableMode1.addColumn(rs.getMetaData().getColumnName(indice));

                table1 = new JTable(tableMode1);
                DefaultTableModel dtm= (DefaultTableModel) table1.getModel();

                while(rs.next()){
                    try{
                        String[] dados = new String[qtdColunas];
                        for(int i= 1; i<=qtdColunas; i++){
                            dados[i-1] =rs.getString(i);
                        }
                        dtm.addRow(dados);
                        spResultado.setViewportView(table1);
                        spResultado.enableInputMethods(false);
                    }catch(Exception ef){
                        System.out.println("Erro ao montar linha!");
                    }
                }
            }catch(Exception ee){
                System.out.println("Erro ao montar tabela!--"+ee);
            }
            table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt){
             tabela1MouseClicked(evt);
         }
      });
    }
    private void montaTabela2(){
            try{
                DefaultTableModel tableMode1 = new DefaultTableModel(
                        new String[]{},0){ };
                int qtdColunas = rs.getMetaData().getColumnCount();
                for(int indice=1; indice<=qtdColunas; indice ++)
                    tableMode1.addColumn(rs.getMetaData().getColumnName(indice));

                table2 = new JTable(tableMode1);
                DefaultTableModel dtm= (DefaultTableModel) table2.getModel();

                while(rs.next()){
                    try{
                        String[] dados = new String[qtdColunas];
                        for(int i= 1; i<=qtdColunas; i++){
                            dados[i-1] =rs.getString(i);
                        }
                        dtm.addRow(dados);
                        spItens.setViewportView(table2);
                        spItens.enableInputMethods(false);
                    }catch(Exception ef){
                        System.out.println("Erro ao montar linha!");
                    }
                }
            }catch(Exception ee){
                System.out.println("Erro ao montar tabela!--"+ee);
            }
    }
    private void tabela1MouseClicked(java.awt.event.MouseEvent evt){
        try {
            PedidoDAO pedidoDAO = new PedidoDAO(banco);
            int x=table1.getSelectedRow();
            cod= Integer.parseInt(table1.getValueAt(x, 0).toString());
            System.out.println("aqui1");
            banco.abrir();
            rs=pedidoDAO.listarDetalhes(cod);
            montaTabela2();
            banco.fechar();
         } catch (SQLException ex) {
            Logger.getLogger(FormHistorico.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField psSenha;
    private javax.swing.JScrollPane spItens;
    private javax.swing.JScrollPane spResultado;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
